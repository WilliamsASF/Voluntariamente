version: '3.8'
services:
  postgres:
    image: postgres:17
    restart: always
    container_name: voluntariamente_postgres
    environment:
      POSTGRES_DB: voluntariamente
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./01-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - ./02-populate.sql:/docker-entrypoint-initdb.d/02-populate.sql:ro
    networks:
      - voluntariamente_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: voluntariamente_backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/voluntariamente
      - SECRET_KEY=dev-secret-key-change-in-production
      - DEBUG=true
      - CORS_ORIGINS=http://localhost:3000
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
    networks:
      - voluntariamente_network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload


  frontend:
    build: ./frontend
    container_name: voluntariamente_frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      backend:
        condition: service_started
    networks:
      - voluntariamente_network
    command: npm run dev:simple

volumes:
  pgdata:

networks:
  voluntariamente_network:
    driver: bridge